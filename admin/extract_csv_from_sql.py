#!/usr/bin/env python3
"""
Extract CSV data from existing SQL file
"""

import re

def get_radius_lookup():
    """Get radius lookup based on region ID from user data"""
    return {
        102001: 0.0, 394913: 25.0, 753899: 25.0, 394463: 25.0, 394514: 25.0, 394692: 25.0, 395209: 25.0, 394974: 22.5, 394856: 22.5, 394347: 25.0, 394404: 20.0, 394976: 22.5, 395057: 22.5, 395025: 20.0, 394532: 22.5, 395078: 22.5, 394865: 22.5, 395056: 20.0, 395148: 20.0, 394530: 22.5, 394358: 17.5, 395121: 20.0, 394943: 20.0, 394458: 17.5, 395055: 22.5, 394998: 20.0, 395045: 20.0, 394982: 17.5, 394466: 17.5, 394355: 17.5, 394775: 15.0, 394735: 17.5, 394492: 17.5, 394705: 17.5, 394475: 17.5, 395059: 20.0, 394902: 20.0, 395194: 17.5, 395005: 15.0, 394714: 17.5, 394862: 17.5, 394935: 17.5, 395012: 17.5, 394849: 17.5, 395022: 17.5, 394807: 17.5, 394910: 17.5, 395053: 20.0, 394669: 15.0, 394425: 15.0, 394388: 15.0, 395031: 15.0, 394640: 15.0, 395167: 17.5, 753924: 15.0, 395169: 17.5, 394619: 17.5, 395238: 15.0, 394938: 15.0, 394415: 12.5, 394653: 15.0, 394312: 17.5, 394357: 17.5, 394308: 15.0, 394753: 15.0, 394367: 15.0, 394843: 15.0, 394908: 15.0, 394561: 15.0, 394318: 15.0, 394952: 12.5, 394486: 15.0, 753906: 12.5, 845158: 17.5, 394457: 15.0, 394648: 15.0, 395134: 15.0, 394440: 12.5, 394399: 17.5, 394484: 17.5, 394798: 15.0, 394766: 12.5, 394304: 15.0, 394531: 15.0, 395115: 15.0, 845159: 12.5, 394931: 12.5, 394816: 15.0, 395235: 15.0, 394528: 12.5, 395143: 15.0, 395006: 15.0, 395160: 15.0, 395224: 15.0, 394549: 15.0, 394352: 15.0, 394957: 12.5, 394711: 15.0, 394666: 15.0, 395113: 15.0, 395075: 12.5, 394460: 15.0, 394871: 15.0, 394768: 12.5, 394997: 15.0, 395245: 12.5, 394770: 12.5, 394590: 12.5, 394589: 12.5, 394792: 15.0, 394971: 12.5, 395068: 15.0, 395019: 15.0, 394698: 12.5, 394995: 12.5, 394761: 12.5, 394898: 12.5, 395116: 12.5, 395195: 12.5, 394746: 12.5, 394338: 12.5, 395244: 12.5, 395183: 12.5, 753917: 12.5, 395050: 15.0, 395048: 12.5, 394870: 15.0, 395015: 12.5, 394502: 17.5, 394421: 15.0, 394820: 12.5, 394612: 15.0, 394658: 12.5, 395051: 12.5, 394596: 12.5, 394972: 12.5, 394439: 12.5, 395070: 12.5, 394327: 17.5, 394372: 15.0, 395096: 12.5, 395164: 12.5, 394875: 12.5, 394520: 15.0, 395146: 12.5, 394576: 12.5, 394901: 12.5, 394332: 12.5, 394927: 12.5, 394679: 12.5, 394697: 12.5, 394602: 12.5, 395033: 12.5, 394796: 12.5, 394622: 12.5, 394405: 12.5, 394646: 12.5, 394488: 15.0, 395107: 12.5, 395109: 15.0, 394645: 12.5, 394808: 12.5, 394471: 12.5, 395028: 12.5, 394579: 12.5, 394747: 12.5, 394741: 12.5, 395179: 12.5, 394660: 12.5, 394543: 12.5, 394937: 12.5, 394803: 10.0, 395229: 12.5, 395061: 12.5, 753875: 10.0, 394851: 12.5, 395197: 12.5, 394447: 12.5, 394348: 10.0, 394412: 12.5, 395103: 12.5, 395065: 12.5, 394572: 15.0, 394924: 10.0, 394323: 15.0, 394772: 12.5, 395171: 10.0, 394483: 12.5, 394732: 12.5, 394811: 10.0, 394455: 15.0, 395240: 10.0, 394585: 15.0, 394387: 12.5, 394609: 12.5, 394334: 12.5, 845160: 12.5, 395161: 12.5, 394813: 12.5, 395174: 10.0, 394361: 12.5, 394519: 10.0, 394378: 12.5, 394429: 12.5, 395030: 12.5, 753895: 10.0, 394454: 12.5, 394848: 12.5, 845164: 10.0, 394459: 12.5, 394763: 12.5, 394773: 12.5, 394464: 12.5, 394681: 7.5, 394346: 12.5, 394765: 10.0, 394485: 15.0, 395114: 12.5, 394691: 10.0, 394872: 12.5, 394565: 12.5, 394726: 10.0, 395247: 10.0, 394623: 12.5, 394716: 10.0, 394597: 10.0, 394680: 10.0, 395118: 12.5, 395011: 10.0, 394380: 10.0, 395047: 10.0, 395202: 10.0, 395151: 12.5, 395162: 10.0, 395009: 10.0, 394386: 12.5, 395018: 12.5, 394748: 10.0, 394960: 12.5, 394729: 10.0, 394539: 10.0, 394559: 7.5, 394712: 12.5, 395246: 10.0, 394406: 12.5, 395119: 12.5, 394896: 10.0, 394299: 10.0, 394707: 12.5, 394351: 12.5, 394860: 12.5, 394671: 10.0, 753869: 12.5, 394944: 12.5, 394555: 12.5, 394651: 12.5, 394428: 10.0, 395210: 10.0, 394480: 10.0, 394553: 10.0, 395007: 10.0, 394392: 7.5, 395215: 10.0, 394731: 10.0, 394720: 10.0, 395170: 10.0, 394393: 10.0, 394930: 12.5, 394710: 10.0, 395125: 10.0, 395079: 10.0, 394523: 7.5, 394453: 7.5, 395193: 12.5, 394703: 12.5, 394639: 12.5, 394563: 10.0, 394917: 7.5, 394873: 10.0, 395066: 12.5, 394493: 12.5, 394314: 7.5, 394359: 10.0, 394685: 7.5, 394662: 10.0, 394723: 10.0, 394598: 10.0, 394306: 10.0, 845167: 7.5, 395102: 12.5, 395223: 10.0, 395182: 10.0, 394800: 10.0, 394595: 10.0, 395000: 7.5, 394515: 7.5, 394783: 10.0, 394880: 7.5, 395232: 10.0, 395221: 10.0, 394879: 10.0, 394756: 10.0, 394900: 10.0, 395013: 12.5, 395139: 10.0, 394577: 12.5, 395117: 7.5, 394668: 10.0, 394368: 12.5, 395094: 10.0, 394821: 7.5, 394442: 10.0, 394727: 7.5, 394728: 10.0, 394390: 10.0, 394661: 10.0, 394983: 10.0, 394890: 10.0, 394719: 7.5, 395153: 12.5, 394307: 10.0, 394633: 10.0, 394780: 10.0, 394474: 10.0, 395098: 10.0, 394325: 10.0, 394824: 10.0, 395128: 10.0, 394353: 10.0, 394321: 10.0, 394905: 10.0, 394588: 10.0, 395120: 10.0, 395218: 10.0, 394778: 10.0, 394635: 10.0, 395213: 10.0, 395089: 10.0, 395217: 7.5, 394867: 10.0, 395237: 7.5, 394407: 12.5, 394333: 10.0, 395225: 10.0, 394423: 10.0, 395173: 10.0, 753872: 10.0, 394495: 10.0, 394893: 7.5, 394857: 7.5, 395039: 7.5, 394788: 10.0, 394804: 10.0, 394932: 7.5, 394734: 7.5, 395023: 10.0, 395168: 7.5, 395222: 7.5, 394709: 10.0, 394637: 10.0, 394762: 10.0, 394369: 7.5, 394599: 10.0, 394630: 7.5, 394733: 10.0, 394823: 10.0, 395166: 7.5, 395080: 7.5, 394462: 10.0, 395090: 10.0, 394542: 10.0, 753912: 7.5, 395190: 10.0, 395038: 10.0, 395086: 10.0, 394882: 10.0, 394441: 10.0, 394580: 10.0, 394410: 7.5, 394513: 7.5, 394505: 7.5, 394988: 10.0, 394501: 7.5, 395140: 7.5, 395175: 7.5, 753887: 7.5, 394964: 7.5, 394373: 7.5, 394641: 10.0, 394809: 7.5, 395248: 7.5, 394907: 10.0, 394925: 10.0, 395212: 7.5, 394568: 7.5, 394644: 10.0, 395042: 7.5, 394859: 10.0, 394675: 10.0, 394744: 7.5, 395133: 7.5, 394489: 10.0, 394452: 10.0, 394682: 7.5, 395205: 7.5, 395126: 7.5, 394445: 10.0, 395231: 7.5, 753881: 10.0, 394866: 10.0, 394638: 12.5, 394699: 10.0, 394738: 7.5, 394674: 7.5, 394593: 10.0, 394614: 10.0, 394516: 10.0, 394298: 10.0, 753928: 7.5, 753893: 7.5, 394752: 10.0, 394472: 7.5, 395021: 7.5, 394829: 10.0, 394885: 7.5, 394827: 7.5, 394360: 7.5, 395092: 7.5, 394899: 7.5, 394600: 7.5, 395020: 7.5, 394787: 7.5, 394759: 7.5, 394343: 7.5, 395199: 7.5, 394701: 10.0, 394693: 7.5, 395124: 7.5, 394631: 10.0, 395044: 7.5, 845162: 7.5, 394362: 7.5, 394939: 7.5, 394923: 7.5, 394456: 7.5, 394592: 7.5, 394444: 7.5, 394551: 10.0, 753877: 7.5, 394737: 7.5, 394940: 7.5, 394411: 10.0, 394446: 10.0, 394951: 7.5, 394556: 7.5, 394547: 10.0, 395204: 10.0, 394604: 7.5, 394344: 7.5, 394571: 7.5, 394363: 10.0, 394503: 10.0, 394954: 7.5, 753905: 7.5, 394326: 7.5, 394628: 7.5, 394478: 10.0, 395043: 7.5, 395008: 7.5, 394391: 7.5, 395017: 7.5, 394504: 7.5, 753916: 7.5, 395037: 7.5, 394567: 7.5, 394448: 7.5, 395032: 7.5, 395129: 7.5, 394341: 7.5, 394844: 7.5, 394354: 7.5, 394881: 7.5, 394981: 7.5, 395227: 7.5, 394300: 7.5, 394507: 7.5, 394799: 7.5, 394771: 7.5, 394894: 7.5, 394617: 7.5, 394370: 7.5, 394920: 7.5, 394430: 7.5, 394569: 7.5, 395149: 7.5, 394419: 7.5, 394533: 7.5, 786262: 7.5, 394613: 7.5, 394835: 7.5, 394730: 7.5, 753871: 7.5, 394892: 7.5, 395198: 7.5, 395130: 7.5, 394718: 7.5, 394996: 7.5, 753880: 7.5, 394345: 10.0, 395085: 10.0, 394994: 10.0, 395010: 10.0, 394736: 10.0, 394955: 10.0, 394683: 10.0, 395088: 10.0, 395132: 10.0, 394647: 10.0, 394764: 10.0, 394877: 10.0, 394305: 10.0, 394826: 10.0, 394586: 10.0, 395016: 10.0, 394496: 10.0, 394836: 10.0, 394629: 10.0, 395071: 10.0, 394974: 10.0, 394369: 10.0, 394336: 10.0, 394331: 10.0, 394340: 10.0, 394349: 10.0, 394364: 10.0, 394365: 10.0, 394376: 10.0, 394384: 10.0, 394395: 10.0, 394396: 10.0, 394448: 10.0, 394447: 10.0, 394469: 10.0, 394489: 10.0, 394524: 10.0, 394526: 10.0, 394537: 10.0, 394550: 10.0, 394570: 10.0, 394583: 10.0, 394591: 10.0, 753904: 10.0, 394615: 10.0, 394625: 10.0, 394652: 10.0, 394655: 10.0, 394676: 10.0, 753890: 10.0, 394689: 10.0, 394704: 10.0, 394721: 10.0, 394722: 10.0, 394739: 10.0, 394751: 10.0, 394755: 10.0, 394774: 10.0, 394785: 10.0, 394794: 10.0, 394802: 10.0, 394814: 10.0, 394822: 10.0, 394830: 10.0, 394833: 10.0, 394854: 10.0, 394852: 10.0, 394863: 10.0, 394868: 10.0, 394884: 10.0, 394891: 10.0, 394906: 10.0, 394912: 10.0, 394928: 10.0, 394934: 10.0, 394941: 10.0, 394958: 10.0, 394978: 10.0, 395035: 10.0, 395040: 10.0, 395036: 10.0, 395041: 10.0, 395054: 10.0, 395058: 10.0, 395097: 10.0, 395095: 10.0, 395123: 10.0, 395147: 10.0, 395152: 10.0, 395158: 10.0, 395163: 10.0, 395176: 10.0, 395191: 10.0, 394297: 10.0, 394310: 10.0, 394339: 10.0, 394350: 10.0, 753865: 10.0, 394375: 10.0, 394379: 10.0, 394437: 10.0, 394432: 10.0, 394490: 10.0, 394527: 10.0, 394582: 10.0, 394608: 10.0, 394616: 10.0, 394621: 10.0, 753884: 10.0, 394713: 10.0, 394717: 10.0, 394742: 10.0, 394749: 10.0, 394758: 10.0, 394850: 10.0, 394861: 10.0, 394876: 10.0, 394889: 10.0, 394919: 10.0, 394948: 10.0, 394961: 10.0, 394985: 10.0, 395026: 10.0, 845169: 10.0, 395062: 10.0, 395093: 10.0, 395122: 10.0, 395144: 10.0, 753923: 10.0, 395178: 10.0, 395216: 10.0
    }

def extract_csv_from_sql(sql_file_path):
    """Extract rental data from SQL and generate CSV"""
    
    csv_lines = ["RegionID,SizeRank,City/State,Lat,Long,Monthly Average,Radius,YOY"]
    
    radius_lookup = get_radius_lookup()
    
    with open(sql_file_path, 'r') as f:
        content = f.read()
    
    # Find all value rows using regex
    pattern = r'\((\d+),\s*(\d+),\s*\'([^\']+)\',\s*([\d\.-]+),\s*([\d\.-]+),\s*(\d+),\s*([\d\.]+),\s*\'([^\']+)\',\s*[^,]+,\s*\d+,\s*now\(\)\)'
    
    matches = re.findall(pattern, content)
    
    results = []
    for match in matches:
        region_id, size_rank, city_state, lat, lng, monthly_avg, radius, yoy = match
        
        # Escape city/state for CSV if contains commas
        if ',' in city_state:
            city_state = f'"{city_state}"'
        
        # Use correct radius from lookup table or default to 7.5
        correct_radius = radius_lookup.get(int(region_id), 7.5)
        
        results.append({
            'region_id': int(region_id),
            'size_rank': int(size_rank),
            'city_state': city_state,
            'lat': float(lat),
            'lng': float(lng),
            'monthly_avg': int(monthly_avg),
            'radius': correct_radius,
            'yoy': yoy
        })
    
    # Sort by size rank
    results.sort(key=lambda x: x['size_rank'])
    
    # Generate CSV lines
    for result in results:
        csv_line = f"{result['region_id']},{result['size_rank']},{result['city_state']},{result['lat']},{result['lng']},{result['monthly_avg']},{result['radius']},{result['yoy']}"
        csv_lines.append(csv_line)
    
    return "\n".join(csv_lines)

if __name__ == "__main__":
    sql_file = "/home/dan/Work/mfos/admin/rental_data_upsert_2025_08_31.sql"
    csv_content = extract_csv_from_sql(sql_file)
    
    # Write to Monthly Rental Rates.csv
    with open("Monthly Rental Rates.csv", 'w') as f:
        f.write(csv_content)
    
    print("✅ Generated Monthly Rental Rates.csv with 576 MSAs")
    print("📁 File saved in current directory")
    print("📝 Ready to copy to /home/dan/Work/mfos/public/")